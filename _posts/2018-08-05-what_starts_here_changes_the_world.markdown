---
layout: post
title:      "What starts here changes the world"
date:       2018-08-05 23:38:53 +0000
permalink:  what_starts_here_changes_the_world
---


When I started Flatiron’s online bootcamp I viewed the first project, the CLI (Command Line Interface) Data Gem, with both excitement and trepidation.  I felt that it would be the first big test of whether I would be successful in the bootcamp.  Of course, I had plenty of challenges as I completed the many labs on my way to this first project, but the labs were closed systems with tests that told me whether I was on the right track and if not, how to start fixing my code.  By comparison, until I got very close to starting it, the CLI project seemed amorphous.  I also worried that I might not have any good ideas to pursue with respect to it as, ironically for someone doing this bootcamp, I am somewhat of a technology non-adopter.  Fortunately, by the time I finished the Music CLI lab I had a pretty good idea of what was involved and basing the project on data scraped from a website made it seem more circumscribed and doable.

It took me a long time to get here.  Working my way through object orientation, I sometimes despaired that I would ever “get it”.  Whenever I thought I had, trying to do a new lab would prove me wrong.  The most valuable experience I had during this time was working through the “Has Many Objects Through” lesson  https://learn.co/tracks/full-stack-web-development-v6/object-oriented-ruby/object-relationships/has-many-objects-through, which gives you code to work on and add to, along with specific requirements.  I decided to stop worrying about how fast I was moving through the program and work on this lesson until I completely understood it.  This forced me to use the Learn sandbox and the website https://repl.it , which I had not tried before, and I got some great advice from the Ask A Question coaches.  I should also mention a study group run by Nancy Noyes on object relationships, which was very illuminating.  In addition to helping me understand the material better, Nancy’s enthusiasm for “the power of relationships” was inspiring.  Completing this lesson was a turning point for me.

The first thing I did when I started the CLI project was to look for a website I could scrape that would give me the data in a form where I could instantiate new objects with the scraped attributes.  This took a long time!  All the ones I looked at, including the Bronx Zoo, Ultiworld and the Austin Symphony, initially appeared promising but then I hit a brick wall.  I still don’t know if that’s because I didn’t know what I was doing or if I really couldn’t do what I wanted with them.  As a last resort, I returned to the website for the daily events calendar at the University of Texas (UT) at Austin, where I work.  I had done a little experimenting with this site initially and having learned quite a bit about scraping in the meantime, I was quickly able to scrape the UT site for data that would allow me to create an array of events, each having a name, location, brief description, url for its specific calendar page and the event category, i.e. the programs/departments that were sponsoring it.  What a relief!  My idea for the gem was that it would present a numbered list of events for that day, which can be quite numerous at a large university like UT Austin.  The user could then select an individual event to learn more about, and also apply some filters to get a list of events in specific categories.  I mapped out that I would need a Scraper class, an Event class and the CLI class, and I had ideas about how I wanted them to interact.

When I was ready to start coding the project itself, I was fortunate to have been alerted to a Learn blog post https://sillhouette.github.io/crowder_news_data_gem  by Richard Austin Melchior that gives specific directions on how to set up a new project on GitHub and link it to your code files on the Learn IDE.  He also described how to save and push your changes up to GitHub as you are coding, and then how to clone the project down from GitHub when you start up again. I was still a bit fuzzy on how all these things work and his explicit directions really helped me to get started.  

As an inveterate procrastinator, I sometimes have to force myself to “just jump in” when I am starting a new thing.  In this case I decided to start with the Scraper class because I already had most of that code worked out in a Learn IDE sandbox file.  Then I moved on to the Event class, because I knew which methods, #initialize, #create_from_array and #find_by_category, that I wanted to build.  Then I realized that I had failed to follow the example of all the videos I’d seen on building these gems, which always start with the CLI class and sketch out how the program should run.  I had a little moment of panic, worrying that all the code I’d already written might not actually work once I hooked it up with the CLI, and also that it might be hard to test the CLI commands with all the other code already there.  I knew that subconsciously I had postponed working on the CLI class because of my general unease with its functionality.  I’ve always found the idea of user input to be mysterious and I am squeamish about coding it.  But once I got started I found that it came pretty easily, and when I had the basic connectivity coded I could easily test the various methods.

One of the best things about doing this project was realizing I had made something that I might actually want to use myself!  Early on I had felt a bit deflated at the prospect of building something that would be no more useful for someone than going directly to the website.  But now I see that it could be quite convenient and quick to use, and I already have in mind some features to add that will make it even better.  I am going to submit the project as it is now for the review, but I have some changes in mind that I am excited to work on in the future.  A coder’s work is never done!

P.S. "What starts here changes the world" is the motto of UT Austin.

